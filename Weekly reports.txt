
Week 1: 6/1 - 6/3 ----------------------------------------------------------------------------------------
	My first week mainly consisted of getting set-up at my desk and in the computer systems of the company.
I got an email account a slack account and a network wide user name that I can use to gain access to 
certain things like my personal time card.  I was introduced around the office to pretty much 
everyone (all developers and operations personnel like finance).  I was also given a few books to read 
and was told to read a bit while at work as part of the internship so I began reading some during this
first week.  This is pretty much all Did the first week since it was a short week and I was just getting
started. 

Week 2: 6/6 - 6/10 ----------------------------------------------------------------------------------------
	This week was interesting mainly because of the CSM course that I got to take, for free!  
CSM stands for Certified Scrum Master and I got to learn all about the basics of being a scrum master
and using scrum in Agile product development over a two day course.  Each day of the course took up the 
full work day and was very informative. Its also a very expensive course but because I am an intern,
they let me take it for free.  Which is awesome. After the course I took a test and passed to become
a certified scrum master which is good for two years I believe.  I took a lot from the class and was very 
excited to see the principles and ideas that were taught in the class utilized by the developers at 
the company, with whom I started to work with the following week.

Week 3: 6/13 - 6/17 ---------------------------------------------------------------------------------------- 
	This week I began participating in daily stand-ups which are part of agile development.  A stand-up is
a quick, usually ten minute, meeting where each team member goes around and says what they worked on the
day before, what they plan on working on that day, and if they have any impediments keeping them from 
progressing any further.  These were cool to witness because it was clear from the very start that 
the stand-ups were beneficial for the team.  It made everyone's progress clear to everyone else on the team,
which allows for smooth progress on the product.  Any problems that occur during the development 
process become visible to the team no later than 24 hours after the problem occurred.  This is due directly
to the stand-up.  Usually when a problem occurs the team member(s) that discover the problem may converse 
with the rest of the team right away but if not they will and should mention it in the next stand-up to occur.
I enjoyed this week and got to pair with the developers on a very cool project that has to do with satellites 
and airplanes.

Week 4: 6/20 - 6/24 ----------------------------------------------------------------------------------------
	This week I paired some more with the developers on the hydra team and I got to learn about and configure 
automated deployment jobs.  The automated jobs increase overall productivity of the development team by
automating the actions that developers would have to repeat over and over again.  This allows the team 
of  developers to focus more of their time on the actual development of a product rather than the processes 
that can be extracted and made autonomous.  This week was also exciting because I was able to utilize my 
Linux experience in order to set up a QA environment for the Hydra development team (The team working 
with the satellites).  This was really fun for me because I was able to apply and see the value of knowledge 
that I have gained while at school.  Specifically the Linux Knowledge that I have gained over the last year.
I also discovered that on a given team not all developers have the same skills.  Some of the developers
on team Hydra for example, have very limited Linux skills.  Due to this discovery I made the realization that 
in order for a development team to be cross-functional, it needs to consist of individuals with different skill
sets, and the team must utilize each of the members skills appropriately.  Also, team members can learn from each 
other and I have had the chance of experiencing that first hand since I am a beginner in almost every discipline
of software development.  

Week 5: 6/27 - 7/1 -----------------------------------------------------------------------------------------
	This week was as exciting as the last.  I was able to sit in on a sprint retrospective.  A sprint 
retrospective is a type of meeting that is time-boxed to be relatively short in order to keep people focused
and to make sure the meeting is efficient.  This was a great learning experience for me because I got to see
one of the things that a great development team does in oder to improve their own productivity.  That being 
the retrospective.  It happens at the end of an iteration (the development time that was taken for 
the last feature or set of features to be produced) and allows the whole team a chance to review how things
went.  They go over things that went well or poorly and discuss things that they want, or think may be helpful 
for the next sprint/ iteration.  I thought this was a great experience because it seems to me, that as a 
team of developers in the field this sort of constructive meeting is vital.  Not only for production of a 
product, but for the smooth and effective inner workings of a team. That was definitely the highlight of my 
week.  I did however also set up a Continuous integration service for my own development environment.  This 
was something that I had learned the previous week from pairing but configuring it on my own was a great 
learning experience and re-iterated the knowledge that I had previously gained.

	
Week 6: 7/4 - 7/8 ------------------------------------------------------------------------------------------
	This week I started pairing with a developer that was on the bench so he was free to work with me.  
We were given an internal project that would allow distributed teams the ability to perform roman voting 
on a number of different topics(roman voting being a Thumbs-up Thumbs-down vote).  James and I (my pairing 
partner) began the product development process.  The first thing we did was set up a Kan-Ban board so that
we could keep track of tasks and features that needed to be completed for our app.  The purpose of the board 
is organization and visibility.  This board was visable from our pairing station and helped guide us in our 
joint effort to create a functional product.  Since this was the first week of our project we performed 
a version of a sprint planning.  We started talking about what we needed to do for the app and began creating
user stories.  These stories were then put on sticky notes and placed on the board.  Once we had a good 
amount of stories on our board we performed backlog grooming.  This involved the breakdown of the highest 
priority stories into small individual tasks.  One story could breakdown to somewhere between 2-7 tasks.  
Larger than that could probably be considered two stories.  However, once we got a large enough amount of tasks
to complete, we stopped breaking down stories and prioritized the tasks that we had.  Once this was complete 
we began our work on the app. This week consisted mainly of setting up all of the Models, Views, and Controllers 
of the MVC design pattern using the asp.net MVC framework.


Week 7: 7/11 - 7/15 ----------------------------------------------------------------------------------------
	During this week I was able to sit with the scrum master of team hydra and help him with the set up of 
a load testing environment.  For this set-up we used vagrant which is a way of managing and instantiating 
multiple virtual machines on one host machine.  It was really cool.  I had used Vagrant previously for the QA
environment that I had set up for the team a couple weeks prior so this time I was able to dive a little deeper
and use the tool to more of its potential.  Last time I had spun up 6 or so Virtual Machines(VM's) using a 
different vagrant file for each. A vagrant file is what vagrant uses to configure the VM.  This time however I 
realized that it could probably be done better, and turns out it could.  Dan and I changed one Vagrant File instead 
of many and because of how we changed it we were able to create multiple different VM's using only one command on 
the command line as opposed to many. That command being 'vagrant up'. It, Was, Awesome! That was a very exciting day 
and I would say the highlight of the week except for the fact that on Friday there was the tech gathering. The 
tech gathering consisted of all the local solutions IQ software developers and some developers who had been employed
by solutions in the past but were currently working with other companies.  This was probably around 30 to 45 
developers since Solutions IQ is a small company, but these developers are at the top of their field.  They have
all been doing it for a long time and have been striving to be better the whole time.  In fact since they are at the 
top of their field they go out and coach companies and other developers on how to write better software.  Each of 
these developers have such a large amount of experience that they know a lot of great ways to go about coding 
clean and elegant software solutions.  Also, since they have seen so much code they are able to recognize what seems to 
me to be, all of the ways that could lead to seriously nasty and hard to fix problems.  So from nine to Noon, different
developers got up and presented on whatever topic they wanted and after lunch there was an open space, where nine
topics were voted on and organized into time slots. Three topics were then discussed at the same time, in three
different rooms, and individuals could choose which to go to.  I could go into details about what I got to experience
but essentially I got to sit in a room and witness extremely experienced programmers energetically discuss new and 
exciting, cutting edge technologies and design patterns, as well as sweeping changes in how teams of developers could 
possibly develop software in the following years using emerging development practices and architectural patterns.
It was a very exciting experience for me.


Week 8: 7/18 - 7/22 ----------------------------------------------------------------------------------------
This week was great.  James an I made a lot of progress on our voting app and I got more comfortable with 
the MVC design pattern, and started to get a good picture of how the structure, of the biggest code base that I 
have worked on to date, was laid out.  Since the base of our product was now in place, we could begin implementing and 
improving some of the core features.  The features that we started working on involved the use of .cshtml
files and the razor engine.  In these files we used html, c#, javascript, jquery, ajax, knockout, and signalR.
Due to the large variety of languages and frameworks that could be used, I found myself struggling to grasp 
some of the basic concepts. I really only have experience in C and next to none in the other languages.  
On top of that I have never built the full stack of a website and therefore the structure and design patterns of a 
website are new concepts for me.  This is a great opportunity for me to learn about all of these things but I have found 
myself becoming slightly frustrated because currently, I am a constant beginner.  As soon as I start to grasp the idea 
of something, a new topic is introduced and with the speed that my pairing partner moves, I don't have time to dig into 
the details of any one topic.  I really have to learn on the fly.  I don't believe this will hurt my education 
during the internship any but it is a different way of learning for me and I'm just trying to adjust. I have
to just pick up on what I can when I can and make the most of it.  I just hope that I'm learning with as much 
efficiency as possible.



Week 9: 7/25 - 7/29 ----------------------------------------------------------------------------------------
This week James and I began to focus more on the client side of the app.  We realized that we were using 
multiple different frameworks for similar tasks and decided that we needed to simplify our implementation.
We chose to utilize knockoutJS to more of its potential and in doing so we re-factored and redesigned the 
client side code.  For me to progress on the app I had to learn Knockout and since its a framework built
on top of javascript, I learned javascript and Jquery in the process.  This week was very educational for me.
Towards the end of the week James and I began creating selenium UI tests for another internal team of solutions
IQ, team hydra.  This was cool to see because it broadened my perspective on web design. However, I only experienced  
a small part of the selenium testing because James and I realized that since my internship was coming 
to an end, I must finish the last couple of main features on the voting app. I spent the last couple days of this 
week on the app and learning the basics of knockout and Javascript through trial and error.  It was a phenomenal 
experience.

Week 10: 8/1 - 8/5 ----------------------------------------------------------------------------------------
This week was the last week of my internship.  I am going to miss interning at solutions IQ.  The people I got to 
work with and learn from were what I believe to be some of the most well versed software developers in their respective 
fields.  This internship was a truly great opportunity and I feel that I have learned a ton.  This last week really 
gave me a chance to apply all that I had learned over the duration of the summer.  I refined the user interface design
and added to the functionality of the app.  The main part of what I added during this week was real-time
web functionality.  I used SignalR to create bi-directional communication between the client and server of my application, 
and wired that communication in to my knockout data-bindings to allow my web pages to automatically update and react to 
changes made by different users.  It was really cool and got me very excited to continue learning all I can about software 
development and the world of computers in general. I began to realize that my future career may also have just become my new hobby.
 



